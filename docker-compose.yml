services:
  postgres:
    image: postgres:16
    container_name: user-db
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=user_service
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres-posts:
    image: postgres:16
    container_name: posts-db
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=posts_service
    volumes:
      - postgres_posts_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "9080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  user-service:
    build: ./users
    container_name: user-service
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/user_service
      - JWT_SECRET_KEY=your_super_secret_key_change_in_production
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092

  posts-service:
    build: ./posts
    container_name: posts-service
    depends_on:
      postgres-posts:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres-posts:5432/posts_service
      - GRPC_PORT=50051
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "50051:50051"

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    depends_on:
      - user-service
      - posts-service
    environment:
      - USER_SERVICE_URL=http://user-service:5000
      - POSTS_SERVICE_URL=posts-service
      - POSTS_SERVICE_PORT=50051
      - JWT_SECRET_KEY=your_super_secret_key_change_in_production
    ports:
      - "8000:8000"

volumes:
  postgres_data:
  postgres_posts_data: